name: CI

on:
  pull_request:
    branches: [ "development" ]
  push:
    branches: [ "development", "main" ]
  workflow_dispatch:


jobs:
  code-quality:
    name: "code-quality"
    strategy:
       matrix:
        python-version: ["3.11", "3.12"]
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      
      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      
      - name: Install dependencies from pyproject.toml
        run: uv pip install -r <(uv pip compile pyproject.toml --extra dev) --system 
      
      - name: Format -  black
        run: black . --check

      - name: Format - isort
        run: isort . --check-only --profile black

      - name: Format - autoflake
        run: autoflake -r . --expand-star-imports --remove-unused-variables --remove-all-unused-imports
  
      - name: Format (chk) - bandit
        run: bandit -r . -c pyproject.toml
      
      - name: Lint - flake8
        run: flake8 .

      - name: Lint - pydocstyle
        run: pydocstyle .

      - name: Lint - yamllint
        run: yamllint .

      - name: Type check - mypy
        run: mypy .

  tests:
    name: "tests"
    needs: code-quality
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          uv pip install pytest --system
          uv pip install -e . --system
      - name: Test
        run: pytest tests -vvv --tb=short
